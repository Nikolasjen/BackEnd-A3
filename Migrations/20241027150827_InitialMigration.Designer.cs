// <auto-generated />
using System;
using FoodAppG4.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodAppG4.Migrations
{
    [DbContext(typeof(FoodAppG4Context))]
    [Migration("20241027150827_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodAppG4.Models.Cook", b =>
                {
                    b.Property<int>("CookId")
                        .HasColumnType("int")
                        .HasColumnName("CookID");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ssn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("SSN");

                    b.HasKey("CookId")
                        .HasName("PK__Cook__E51807016A4A9DE2");

                    b.ToTable("Cook", (string)null);
                });

            modelBuilder.Entity("FoodAppG4.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PaymentInfo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Payment_Info");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B8FF097CAC");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("FoodAppG4.Models.Cyclist", b =>
                {
                    b.Property<int>("CyclistId")
                        .HasColumnType("int")
                        .HasColumnName("CyclistID");

                    b.Property<string>("BikeType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("HourlyRate")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Hourly_rate");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CyclistId")
                        .HasName("PK__Cyclist__A3CBF9E0134B5CEE");

                    b.ToTable("Cyclist", (string)null);
                });

            modelBuilder.Entity("FoodAppG4.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .HasColumnType("int")
                        .HasColumnName("DishID");

                    b.Property<DateTime?>("AvailableFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AvailableTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CookId")
                        .HasColumnType("int")
                        .HasColumnName("CookID");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("DishId")
                        .HasName("PK__Dish__18834F7058F04B29");

                    b.HasIndex("CookId");

                    b.ToTable("Dish", (string)null);
                });

            modelBuilder.Entity("FoodAppG4.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__C3905BAFF98CAB4A");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("FoodAppG4.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int")
                        .HasColumnName("OrderDetailID");

                    b.Property<int?>("DishId")
                        .HasColumnType("int")
                        .HasColumnName("DishID");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId")
                        .HasName("PK__OrderDet__D3B9D30CE2DF5489");

                    b.HasIndex("DishId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("FoodAppG4.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .HasColumnType("int")
                        .HasColumnName("RatingID");

                    b.Property<int?>("CookId")
                        .HasColumnType("int")
                        .HasColumnName("CookID");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("CyclistId")
                        .HasColumnType("int")
                        .HasColumnName("CyclistID");

                    b.Property<int?>("DeliveryScore")
                        .HasColumnType("int");

                    b.Property<int?>("FoodScore")
                        .HasColumnType("int");

                    b.HasKey("RatingId")
                        .HasName("PK__Rating__FCCDF85C1B6CDE4B");

                    b.HasIndex("CookId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CyclistId");

                    b.ToTable("Rating", (string)null);
                });

            modelBuilder.Entity("FoodAppG4.Models.Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .HasColumnType("int")
                        .HasColumnName("SalaryID");

                    b.Property<int?>("CyclistId")
                        .HasColumnType("int")
                        .HasColumnName("CyclistID");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.Property<string>("Period")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SalaryId")
                        .HasName("PK__Salary__4BE204B7D993DC3B");

                    b.HasIndex("CyclistId");

                    b.ToTable("Salary", (string)null);
                });

            modelBuilder.Entity("FoodAppG4.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .HasColumnType("int")
                        .HasColumnName("TripID");

                    b.Property<int?>("CyclistId")
                        .HasColumnType("int")
                        .HasColumnName("CyclistID");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.HasKey("TripId")
                        .HasName("PK__Trip__51DC711E5362DF4F");

                    b.HasIndex("CyclistId");

                    b.HasIndex("OrderId");

                    b.ToTable("Trip", (string)null);
                });

            modelBuilder.Entity("FoodAppG4.Models.TripStop", b =>
                {
                    b.Property<int>("TripStopsId")
                        .HasColumnType("int")
                        .HasColumnName("TripStopsID");

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StopAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("StopTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TripId")
                        .HasColumnType("int")
                        .HasColumnName("TripID");

                    b.HasKey("TripStopsId")
                        .HasName("PK__TripStop__A60692044ADB175B");

                    b.HasIndex("TripId");

                    b.ToTable("TripStops");
                });

            modelBuilder.Entity("FoodAppG4.Models.Dish", b =>
                {
                    b.HasOne("FoodAppG4.Models.Cook", "Cook")
                        .WithMany("Dishes")
                        .HasForeignKey("CookId")
                        .HasConstraintName("FK__Dish__CookID__1AD3FDA4");

                    b.Navigation("Cook");
                });

            modelBuilder.Entity("FoodAppG4.Models.Order", b =>
                {
                    b.HasOne("FoodAppG4.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Order__CustomerI__17F790F9");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FoodAppG4.Models.OrderDetail", b =>
                {
                    b.HasOne("FoodAppG4.Models.Dish", "Dish")
                        .WithMany("OrderDetails")
                        .HasForeignKey("DishId")
                        .HasConstraintName("FK__OrderDeta__DishI__1EA48E88");

                    b.HasOne("FoodAppG4.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderDeta__Order__1DB06A4F");

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FoodAppG4.Models.Rating", b =>
                {
                    b.HasOne("FoodAppG4.Models.Cook", "Cook")
                        .WithMany("Ratings")
                        .HasForeignKey("CookId")
                        .HasConstraintName("FK__Rating__CookID__2B0A656D");

                    b.HasOne("FoodAppG4.Models.Customer", "Customer")
                        .WithMany("Ratings")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Rating__Customer__2BFE89A6");

                    b.HasOne("FoodAppG4.Models.Cyclist", "Cyclist")
                        .WithMany("Ratings")
                        .HasForeignKey("CyclistId")
                        .HasConstraintName("FK__Rating__CyclistI__2CF2ADDF");

                    b.Navigation("Cook");

                    b.Navigation("Customer");

                    b.Navigation("Cyclist");
                });

            modelBuilder.Entity("FoodAppG4.Models.Salary", b =>
                {
                    b.HasOne("FoodAppG4.Models.Cyclist", "Cyclist")
                        .WithMany("Salaries")
                        .HasForeignKey("CyclistId")
                        .HasConstraintName("FK__Salary__CyclistI__282DF8C2");

                    b.Navigation("Cyclist");
                });

            modelBuilder.Entity("FoodAppG4.Models.Trip", b =>
                {
                    b.HasOne("FoodAppG4.Models.Cyclist", "Cyclist")
                        .WithMany("Trips")
                        .HasForeignKey("CyclistId")
                        .HasConstraintName("FK__Trip__CyclistID__22751F6C");

                    b.HasOne("FoodAppG4.Models.Order", "Order")
                        .WithMany("Trips")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Trip__OrderID__2180FB33");

                    b.Navigation("Cyclist");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FoodAppG4.Models.TripStop", b =>
                {
                    b.HasOne("FoodAppG4.Models.Trip", "Trip")
                        .WithMany("TripStops")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK__TripStops__TripI__25518C17");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("FoodAppG4.Models.Cook", b =>
                {
                    b.Navigation("Dishes");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("FoodAppG4.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("FoodAppG4.Models.Cyclist", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("Salaries");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("FoodAppG4.Models.Dish", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FoodAppG4.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("FoodAppG4.Models.Trip", b =>
                {
                    b.Navigation("TripStops");
                });
#pragma warning restore 612, 618
        }
    }
}
